close all; clear; clc
%https://archive.ics.uci.edu/ml/machine-learning-databases/00602/

fullDS = readtable('Dry_Bean_Dataset.xlsx');
featMat = fullDS(:,1:16);
featMat = featMat(1:13600,:);

realCL = [ones(2027,1); 2*ones(1322,1); 3*ones(522,1); 
	  4*ones(1630,1); 5*ones(1928,1); 6*ones(2636,1); 7*ones(3546,1)];

auxInds = repmat((1:10)',1360,1);

% Muestras de entrenamiento/validación

accVec = zeros(1,10); % Vector de ceros para guardar accuracy

for auxInds2 = 1:10
    

    Tr_Idx = find(auxInds ~= auxInds2 );
    Val_Idx = find(auxInds == auxInds2 );
% Entrenamiento
    Tr_Samples = featMat(Tr_Idx,:);
    Tr_Labels = realCL(Tr_Idx,:);
% Validación
    Val_Samples = featMat(Val_Idx,:);
    Val_Labels = realCL(Val_Idx,:);

    knnModel = fitcknn(Tr_Samples,Tr_Labels);  % Método KNN

    predLabels = predict(knnModel,Val_Samples);  % Predecir
    mc = confusionmat(Val_Labels,predLabels); % Matriz de confusión
    confusionchart(mc);
    accVec(1,auxInds2) = (mc(1,1) + mc(2,2) + mc(3,3) + mc(4,4) + mc(5,5) ...
            + mc(6,6) + mc(7,7))/sum(mc(:));
end

figure,plot(1:10,accVec);grid on;xlabel('No. partition');ylabel('Accuracy');
ylim([0 1]);

mean(accVec) % Media aritmetica / Promedio
geomean(accVec) % Media geometrica

Comparison = [Val_Labels, predLabels];



% ¿Cómo se hallaron las etiquetas de clase para convertirlas a
% realCL = fullDS(:,17);
%	c1 = find(strcmp('SEKER',realCL{:,:}));
%	c2 = find(strcmp('BARBUNYA',realCL{:,:}));
%	c3 = find(strcmp('BOMBAY',realCL{:,:}));